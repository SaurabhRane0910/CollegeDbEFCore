// <auto-generated />
using CollegeDbEC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CollegeDbEC.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241205080109_init1")]
    partial class init1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("CollegeDbEC.Data.Author", b =>
                {
                    b.Property<int>("Author_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Author_id"));

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Author_id");

                    b.ToTable("author");

                    b.HasData(
                        new
                        {
                            Author_id = 1,
                            AuthorName = "Harry",
                            Email = "harry@gmail.com"
                        },
                        new
                        {
                            Author_id = 2,
                            AuthorName = "Hermoine",
                            Email = "hermoine@gmail.com"
                        },
                        new
                        {
                            Author_id = 3,
                            AuthorName = "Peter",
                            Email = "peterParkar@gmail.com"
                        });
                });

            modelBuilder.Entity("CollegeDbEC.Data.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Author_id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("NoOfPagaes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Author_id");

                    b.HasIndex("LanguageId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("CollegeDbEC.Data.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("currencies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Indian INR",
                            title = "INR"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Doller",
                            title = "Doller"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Euro",
                            title = "Euro"
                        });
                });

            modelBuilder.Entity("CollegeDbEC.Data.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Titile")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Language");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "National Language",
                            Titile = "Hindi"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Universal Language",
                            Titile = "English"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Maharashtrian Language",
                            Titile = "Marathi"
                        });
                });

            modelBuilder.Entity("CollegeDbEC.Data.Book", b =>
                {
                    b.HasOne("CollegeDbEC.Data.Author", "Author")
                        .WithMany()
                        .HasForeignKey("Author_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CollegeDbEC.Data.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Language");
                });
#pragma warning restore 612, 618
        }
    }
}
